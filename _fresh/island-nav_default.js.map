{
  "version": 3,
  "sources": ["https://deno.land/x/fresh@1.4.2/src/runtime/head.ts", "https://deno.land/x/fresh@1.4.2/src/runtime/csp.ts", "islands/Nav.jsx"],
  "sourcesContent": ["import { ComponentChildren, createContext } from \"preact\";\nimport { useContext } from \"preact/hooks\";\n\nexport interface HeadProps {\n  children: ComponentChildren;\n}\n\nexport const HEAD_CONTEXT = createContext<ComponentChildren[]>([]);\n\nexport function Head(props: HeadProps) {\n  let context: ComponentChildren[];\n  try {\n    context = useContext(HEAD_CONTEXT);\n  } catch (err) {\n    throw new Error(\n      \"<Head> component is not supported in the browser, or during suspense renders.\",\n      { cause: err },\n    );\n  }\n  context.push(props.children);\n  return null;\n}\n", "import { createContext } from \"preact\";\nimport { useContext } from \"preact/hooks\";\n\nexport const SELF = \"'self'\";\nexport const UNSAFE_INLINE = \"'unsafe-inline'\";\nexport const UNSAFE_EVAL = \"'unsafe-eval'\";\nexport const UNSAFE_HASHES = \"'unsafe-hashes'\";\nexport const NONE = \"'none'\";\nexport const STRICT_DYNAMIC = \"'strict-dynamic'\";\n\nexport function nonce(val: string) {\n  return `'nonce-${val}'`;\n}\n\nexport interface ContentSecurityPolicy {\n  directives: ContentSecurityPolicyDirectives;\n  reportOnly: boolean;\n}\n\nexport interface ContentSecurityPolicyDirectives {\n  // Fetch directives\n  /**\n   * Defines the valid sources for web workers and nested browsing contexts\n   * loaded using elements such as <frame> and <iframe>.\n   */\n  childSrc?: string[];\n  /**\n   * Restricts the URLs which can be loaded using script interfaces.\n   */\n  connectSrc?: string[];\n  /**\n   * Serves as a fallback for the other fetch directives.\n   */\n  defaultSrc?: string[];\n  /**\n   * Specifies valid sources for fonts loaded using @font-face.\n   */\n  fontSrc?: string[];\n  /**\n   * Specifies valid sources for nested browsing contexts loading using elements\n   * such as <frame> and <iframe>.\n   */\n  frameSrc?: string[];\n  /**\n   * Specifies valid sources of images and favicons.\n   */\n  imgSrc?: string[];\n  /**\n   * Specifies valid sources of application manifest files.\n   */\n  manifestSrc?: string[];\n  /**\n   * Specifies valid sources for loading media using the <audio> , <video> and\n   * <track> elements.\n   */\n  mediaSrc?: string[];\n  /**\n   * Specifies valid sources for the <object>, <embed>, and <applet> elements.\n   */\n  objectSrc?: string[];\n  /**\n   * Specifies valid sources to be prefetched or prerendered.\n   */\n  prefetchSrc?: string[];\n  /**\n   * Specifies valid sources for JavaScript.\n   */\n  scriptSrc?: string[];\n  /**\n   * Specifies valid sources for JavaScript <script> elements.\n   */\n  scriptSrcElem?: string[];\n  /**\n   * Specifies valid sources for JavaScript inline event handlers.\n   */\n  scriptSrcAttr?: string[];\n  /**\n   * Specifies valid sources for stylesheets.\n   */\n  styleSrc?: string[];\n  /**\n   * Specifies valid sources for stylesheets <style> elements and <link>\n   * elements with rel=\"stylesheet\".\n   */\n  styleSrcElem?: string[];\n  /**\n   * Specifies valid sources for inline styles applied to individual DOM\n   * elements.\n   */\n  styleSrcAttr?: string[];\n  /**\n   * Specifies valid sources for Worker, SharedWorker, or ServiceWorker scripts.\n   */\n  workerSrc?: string[];\n\n  // Document directives\n  /**\n   * Restricts the URLs which can be used in a document's <base> element.\n   */\n  baseUri?: string[];\n  /**\n   * Enables a sandbox for the requested resource similar to the <iframe>\n   * sandbox attribute.\n   */\n  sandbox?: string[];\n\n  // Navigation directives\n  /**\n   * Restricts the URLs which can be used as the target of a form submissions\n   * from a given context.\n   */\n  formAction?: string[];\n  /**\n   * Specifies valid parents that may embed a page using <frame>, <iframe>,\n   * <object>, <embed>, or <applet>.\n   */\n  frameAncestors?: string[];\n  /**\n   * Restricts the URLs to which a document can initiate navigation by any\n   * means, including <form> (if form-action is not specified), <a>,\n   * window.location, window.open, etc.\n   */\n  navigateTo?: string[];\n\n  /**\n   * The URI to report CSP violations to.\n   */\n  reportUri?: string;\n}\n\nexport const CSP_CONTEXT = createContext<ContentSecurityPolicy | undefined>(\n  undefined,\n);\n\nexport function useCSP(mutator: (csp: ContentSecurityPolicy) => void) {\n  const csp = useContext(CSP_CONTEXT);\n  if (csp) {\n    mutator(csp);\n  }\n}\n", "import { useEffect, useRef, useState } from \"preact/hooks\"\nimport { tw } from \"twind\"\nimport { asset } from \"$fresh/runtime.ts\"\n\nconst Nav = () => {\n  const ref = useRef(window)\n  const [navOpen, setNavOpen] = useState(false)\n  const LINK_STYLE = tw`block mt-4 md:inline-block md:mt-0 hover:text-white`\n  const NAV_STYLE = tw`w-full block flex-grow md:flex md:items-center md:w-auto`\n  const NAV_LINKS_STYLE = tw`text-sm md:flex-grow`\n  const BUTTON_STYLE =\n    tw`inline-block text-sm px-4 py-2 leading-none border rounded text-white border-white hover:border-transparent hover:bg-yellow-400 mt-4 md:mt-0`\n  useEffect(() => {\n    // const url = new URL(ref.current.location.href);\n    let lastKnownWidth = 0\n    let ticking = false\n    const doSomething = (width) => {\n      // console.log(width)\n      if (width > 768) {\n        setNavOpen(true)\n      } else {\n        setNavOpen(false)\n      }\n    }\n    const onResize = (e) => {\n      lastKnownWidth = ref.current.innerWidth\n      if (!ticking) {\n        ref.current.requestAnimationFrame(() => {\n          doSomething(lastKnownWidth)\n          ticking = false\n        })\n        ticking = true\n      }\n    }\n    doSomething(ref.current.innerWidth)\n    ref.current.addEventListener(\"resize\", onResize)\n    return () => {\n      ref.current.removeEventListener(\"resize\", onResize)\n    }\n  }, [])\n\n  return (\n    <div class=\"bg-yellow-500\">\n      <nav class=\"flex items-center justify-between flex-wrap p-6 max-w-screen-md mx-auto\">\n        <div class=\"flex items-center flex-shrink-0 text-white mr-6\">\n          <a href=\"/\">\n            <img\n              src={asset(\"/logo.svg\")}\n              width={30}\n              alt=\"the fresh logo: a sliced lemon dripping with juice\"\n            />\n          </a>\n          <a href=\"/\">\n            <span class=\"font-semibold text-xl tracking-tight\">\n              Fresh Strapi\n            </span>\n          </a>\n        </div>\n        <div class=\"block md:hidden\">\n          <button\n            class=\"flex items-center px-3 py-2 border rounded text-white hover:border-yellow-400 hover:bg-yellow-400 focus:outline-none\"\n            onClick={() => {\n              setNavOpen(!navOpen)\n            }}\n          >\n            <svg\n              class=\"fill-current h-3 w-3\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <title>Menu</title>\n              <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n            </svg>\n          </button>\n        </div>\n        {navOpen\n          ? (\n            <div\n              class={NAV_STYLE}\n            >\n              <div class={NAV_LINKS_STYLE}>\n                <a\n                  href=\"/login\"\n                  class={tw`${LINK_STYLE} mr-4`}\n                >\n                  Login\n                </a>\n                <a\n                  href=\"/logout\"\n                  class={tw`${LINK_STYLE} mr-4`}\n                >\n                  Logout\n                </a>\n                <a\n                  href=\"/account\"\n                  class={tw`${LINK_STYLE}`}\n                >\n                  Account\n                </a>\n              </div>\n              <div>\n                <a\n                  href=\"/signup\"\n                  class={BUTTON_STYLE}\n                >\n                  Signup\n                </a>\n              </div>\n            </div>\n          )\n          : \"\"}\n      </nav>\n    </div>\n  )\n}\nexport default Nav\n"],
  "mappings": "qNAOO,IAAM,aAAe,GAAmC,CAAC,CAAC,EC2H1D,IAAM,YAAc,GACzB,MACF,EChIA,IAAM,IAAM,IAAM,CAChB,IAAM,IAAM,EAAO,MAAM,EACnB,CAAC,QAAS,UAAU,EAAI,EAAS,EAAK,EACtC,WAAa,wDACb,UAAY,6DACZ,gBAAkB,yBAClB,aACJ,iJACF,SAAU,IAAM,CAEd,IAAI,eAAiB,EACjB,QAAU,GACR,YAAe,OAAU,CAEzB,MAAQ,IACV,WAAW,EAAI,EAEf,WAAW,EAAK,CAEpB,EACM,SAAY,GAAM,CACtB,eAAiB,IAAI,QAAQ,WACxB,UACH,IAAI,QAAQ,sBAAsB,IAAM,CACtC,YAAY,cAAc,EAC1B,QAAU,EACZ,CAAC,EACD,QAAU,GAEd,EACA,mBAAY,IAAI,QAAQ,UAAU,EAClC,IAAI,QAAQ,iBAAiB,SAAU,QAAQ,EACxC,IAAM,CACX,IAAI,QAAQ,oBAAoB,SAAU,QAAQ,CACpD,CACF,EAAG,CAAC,CAAC,EAGH,EAAC,OAAI,MAAM,gBACT,WAAC,OAAI,MAAM,0EACT,YAAC,OAAI,MAAM,kDACT,YAAC,KAAE,KAAK,IACN,WAAC,OACC,IAAK,MAAM,WAAW,EACtB,MAAO,GACP,IAAI,qDACN,EACF,EACA,EAAC,KAAE,KAAK,IACN,WAAC,QAAK,MAAM,uCAAuC,wBAEnD,EACF,GACF,EACA,EAAC,OAAI,MAAM,kBACT,WAAC,UACC,MAAM,uHACN,QAAS,IAAM,CACb,WAAW,CAAC,OAAO,CACrB,EAEA,WAAC,OACC,MAAM,uBACN,QAAQ,YACR,MAAM,6BAEN,YAAC,SAAM,gBAAI,EACX,EAAC,QAAK,EAAE,8CAA8C,GACxD,EACF,EACF,EACC,QAEG,EAAC,OACC,MAAO,UAEP,YAAC,OAAI,MAAO,gBACV,YAAC,KACC,KAAK,SACL,MAAO,KAAK,UAAU,QACvB,iBAED,EACA,EAAC,KACC,KAAK,UACL,MAAO,KAAK,UAAU,QACvB,kBAED,EACA,EAAC,KACC,KAAK,WACL,MAAO,KAAK,UAAU,GACvB,mBAED,GACF,EACA,EAAC,OACC,WAAC,KACC,KAAK,UACL,MAAO,aACR,kBAED,EACF,GACF,EAEA,IACN,EACF,CAEJ,EACO,YAAQ",
  "names": []
}
